# -*- coding: utf-8 -*-
"""study_machine_learning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Xzh77zmQIKwCxbSF3TuSFDjH8zLuUmpk
"""

# Importing libraries and declaring variables
from datetime import datetime
import graphviz
import numpy as np
import pandas as pd
from sklearn.dummy import DummyClassifier
from sklearn.tree import DecisionTreeClassifier, export_graphviz
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split

uri = 'https://gist.githubusercontent.com/guilhermesilveira/4d1d4a16ccbf6ea4e0a64a38a24ec884/raw/afd05cb0c796d18f3f5a6537053ded308ba94bf7/car-prices.csv'
current_year = datetime.today().year
SEED = 5
np.random.seed(SEED)

df = pd.read_csv(uri)

change = {
    "no": 0,
    "yes": 1
}

df["model_years_old"] = current_year - df["model_year"]
df["km_per_year"] = df["mileage_per_year"] * 1.60934
df["sold"] = df["sold"].map(change)

df_x = df[["km_per_year", "model_years_old", "price"]]
df_y = df["sold"]

train_x, test_x, train_y, test_y = train_test_split(df_x, df_y, test_size = 0.25, stratify=df_y)
print(f"Training with {len(train_x)} and testing with {len(test_x)}")

# Baseline
dummy = DummyClassifier()
dummy.fit(train_x, train_y)
dummy_accuracy = dummy.score(test_x, test_y)
print(f"Baseline accuracy was {dummy_accuracy:.2%}")

# Model training
model = DecisionTreeClassifier(max_depth=3)
model.fit(train_x, train_y)
predict = model.predict(test_x)

accuracy = accuracy_score(test_y, predict)
print(f"Accuracy was {accuracy:.2%}")

features = df_x.columns
dot_data = export_graphviz(model, feature_names=features, filled=True, class_names=["n√£o", "sim"])
graph = graphviz.Source(dot_data)