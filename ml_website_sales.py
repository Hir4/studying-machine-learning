# -*- coding: utf-8 -*-
"""study_machine_learning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Xzh77zmQIKwCxbSF3TuSFDjH8zLuUmpk
"""

# Importing libraries and declaring variables
import pandas as pd 
from sklearn.svm import LinearSVC
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split

SEED = 20 # Make sure that the random_state will be the same, so the comportament of the test should not change
uri='https://gist.githubusercontent.com/guilhermesilveira/2d2efa37d66b6c84a722ea627a897ced/raw/10968b997d885cbded1c92938c7a9912ba41c615/tracking.csv'

df = pd.read_csv(uri)

df_x = df[["home","how_it_works","contact"]]
df_y = df["bought"]

train_x, test_x, train_y, test_y = train_test_split(df_x, df_y, random_state = SEED, test_size = 0.25, stratify = df_y) # Stratify makes sure that train and test will be equivalent

# Instancing model and training
model = LinearSVC()
model.fit(train_x, train_y)

# Testing model and accuracing
predict = model.predict(test_x)
accuracy = accuracy_score(test_y, predict)

print(f"Accuracy was {accuracy:.2%}")

train_y.value_counts() # Show values so I can compare if it is proporcional to test_y

test_y.value_counts() # Show values so I can compare if it is proporcional to train_y